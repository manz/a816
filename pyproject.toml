[project]
name = "a816"
description = "65c816 patching assembler (Super Famicom)"
authors = [
    { name = "Emmanuel Peralta", email = "manz@ringum.net" },
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"

keywords = ["super famicom", "supernes", "assembly", "romhack"]

classifiers = [
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.10",
]

dependencies = []

dynamic = [
    "version",
]

[tool.hatch.version]
source = "env"
variable = "VERSION"

[tool.hatch.build.targets.wheel]
only-include = ["a816", "script"]
sources = ["."]

[project.urls]
homepage = "https://a816.ringum.net"
repository = "https://github.com/manz/a816"

[project.scripts]
x816 = "a816.cli:cli_main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".hatch",
    ".github",
    ".coverage",
    "build",
    "dist"
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.8
target-version = "py310"

[tool.coverage.run]
relative_files = true

# Environments

[tool.hatch.envs.tests]
detached = true
dependencies = [
    "pytest", "pytest-cov", "mypy", "ruff"
]

[tool.hatch.envs.tests.scripts]
coverage = "pytest --cov-report term --cov-report xml --cov=a816 --cov-branch tests"

tests = "pytest tests"
check = [
    "ruff format --check a816 tests",
    "ruff a816 tests",
]
format = [
    "ruff --fix a816 tests",
    "ruff format a816 tests",
    "check",
]
type = "mypy -p a816 -p tests --strict --show-error-codes"

all = ["check", "type", "coverage"]

[tool.hatch.envs.binary]
detached = true
dependencies = [
    "nuitka",
    "ordered-set",
    "pyoxidizer"
]

[tool.hatch.envs.binary.scripts]
build = [
    "nuitka3 --standalone a816/cli.py"
]
oxydizer = [
    "pyoxidizer build --release"
]
